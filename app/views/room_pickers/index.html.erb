<!-- Button trigger modal -->
<button id="buttonShowModal" type="button" class="btn btn-primary d-none" data-toggle="modal" data-target="#addRoomPicker">
</button>

<!-- Modal -->
<div class="modal fade" id="addRoomPicker" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLongTitle"><%= t("room_pickers.form_texts.add_picker") %></h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
				<div class="row d-flex align-items-center mb-4">
					<label class="control-label col-sm-2" for="room_picker_name"><%= t('activerecord.attributes.room_picker.name') %>:</label>
					<div class="col-sm-10 align-items-center">
						<input class="form-control" type="text" name="room_picker[name]" id="room_picker_name">
					</div>
      	</div>
				<div class="row d-flex align-items-center mb-4">
					<label class="control-label col-sm-2" for="room_picker_room_id"><%= t('activerecord.attributes.room_picker.room') %>:</label>
					<div class="col-sm-10 align-items-center">
						<select class="form-control" type="text" name="room_picker[name]" id="room_picker_room_id">
							<% room_available.each do |room| %>
								<option value="<%= room.first %>"><%= room.last.titleize %></option>
							<% end %>
						</select>
					</div>
      	</div>
				<div class="row d-flex align-items-center mb-4">
					<label class="control-label col-sm-2" for="room_picker_repeat_type"><%= t('activerecord.attributes.room_picker.repeat_type') %>:</label>
					<div class="col-sm-10 align-items-center">
						<select class="form-control" type="text" name="room_picker[repeat_type]" id="room_picker_repeat_type">
							<% RoomPicker.repeat_types.each do |type, value| %>
								<option value="<%= type %>"><%= type.titleize %></option>
							<% end %>
						</select>
					</div>
      	</div>
				<div class="row d-flex align-items-center mb-4">
					<label class="control-label col-sm-4" for="room_picker_repeat"><%= t('activerecord.attributes.room_picker.from_this_time') %>:</label>
					<div class="col-sm-4 align-items-center">
						<input class="" type="checkbox" name="room_picker[repeat]" id="room_picker_repeat">
					</div>
      	</div>
				<div class="row d-flex align-items-center mb-4">
					<label class="control-label col-sm-2" for="room_picker_start_at"><%= t('activerecord.attributes.room_picker.start_at') %>:</label>
					<div class="col-sm-10 align-items-center">
						<input class="form-control" type="datetime-local" name="room_picker[start_at]" id="room_picker_start_at">
					</div>
      	</div>
				<div class="row d-flex align-items-center mb-4">
					<label class="control-label col-sm-2" for="room_picker_end_at"><%= t('activerecord.attributes.room_picker.end_at') %>:</label>
					<div class="col-sm-10 align-items-center">
						<input class="form-control" type="datetime-local" name="room_picker[end_at]" id="room_picker_end_at">
					</div>
      	</div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal"><%= t("form_buttons.close") %></button>
        <button id="createRoomPicker" type="button" class="btn btn-primary" data-dismiss="modal"><%= t("form_buttons.save") %></button>
      </div>
    </div>
  </div>
</div>


<!-- Button trigger modal -->
<button id="buttonShowUpdateModal" type="button" class="btn btn-primary d-none" data-toggle="modal" data-target="#updateRoomPicker">
</button>

<!-- Modal -->
<div class="modal fade" id="updateRoomPicker" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLongTitle"><%= t("room_pickers.form_texts.update_picker") %></h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
				<div class="row d-flex align-items-center mb-4">
					<label class="control-label col-sm-2" for="update_room_picker_name"><%= t('activerecord.attributes.room_picker.name') %>:</label>
					<div class="col-sm-10 align-items-center">
						<input class="form-control updatePickerInput" type="text" name="room_picker[name]" id="update_room_picker_name">
					</div>
      	</div>
				<div class="row d-flex align-items-center mb-4">
					<label class="control-label col-sm-2" for="update_room_picker_room_id"><%= t('activerecord.attributes.room_picker.room') %>:</label>
					<div class="col-sm-10 align-items-center">
						<select class="form-control updatePickerInput" type="text" name="room_picker[name]" id="update_room_picker_room_id">
							<% room_available.each do |room| %>
								<option value="<%= room.first %>"><%= room.last.titleize %></option>
							<% end %>
						</select>
					</div>
      	</div>
				<div class="row d-flex align-items-center mb-4">
					<label class="control-label col-sm-2" for="update_room_picker_repeat_type"><%= t('activerecord.attributes.room_picker.repeat_type') %>:</label>
					<div class="col-sm-10 align-items-center">
						<select class="form-control updatePickerInput" type="text" name="room_picker[repeat_type]" id="update_room_picker_repeat_type">
							<% RoomPicker.repeat_types.each do |type, value| %>
								<option value="<%= type %>"><%= type.titleize %></option>
							<% end %>
						</select>
					</div>
      	</div>
				<div class="row d-flex align-items-center mb-4">
					<label class="control-label col-sm-4" for="update_room_picker_repeat"><%= t('activerecord.attributes.room_picker.from_this_time') %>:</label>
					<div class="col-sm-4">
						<input class="updatePickerInput" type="checkbox" name="room_picker[repeat]" id="update_room_picker_repeat">
					</div>
      	</div>
				<div class="row d-flex align-items-center mb-4">
					<label class="control-label col-sm-2" for="update_room_picker_start_at"><%= t('activerecord.attributes.room_picker.start_at') %>:</label>
					<div class="col-sm-10 align-items-center">
						<input class="form-control updatePickerInput" type="datetime-local" name="room_picker[start_at]" id="update_room_picker_start_at">
					</div>
      	</div>
				<div class="row d-flex align-items-center mb-4">
					<label class="control-label col-sm-2" for="update_room_picker_end_at"><%= t('activerecord.attributes.room_picker.end_at') %>:</label>
					<div class="col-sm-10 align-items-center">
						<input class="form-control updatePickerInput" type="datetime-local" name="room_picker[end_at]" id="update_room_picker_end_at">
					</div>
      	</div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal"><%= t("form_buttons.close") %></button>
				<button id="removePicker" type="button" class="btn btn-danger updatePickerInput" data-dismiss="modal"><%= t("form_buttons.remove") %></button>
        <button id="sumitUpdateRoomPicker" type="button" class="btn btn-primary updatePickerInput" data-dismiss="modal"><%= t("form_buttons.save") %></button>
      </div>
    </div>
  </div>
</div>
<div id='calendar' style=""></div>
<script>
	$( document ).ready(function() {
		function datetimeLocal(datetime) {
			const dt = new Date(datetime);
			dt.setMinutes(dt.getMinutes() - dt.getTimezoneOffset());
			return dt.toISOString().slice(0, 16);
		}

		function removeListener(id){
			var old_element = document.getElementById(id);
			var new_element = old_element.cloneNode(true);
			old_element.parentNode.replaceChild(new_element, old_element);
			return new_element;
		}

		function getFormData() {
			return {
								description: document.getElementById('room_picker_name').value,
								repeat_type: document.getElementById('room_picker_repeat_type').value,
								room_id: document.getElementById('room_picker_room_id').value,
								start_at: document.getElementById('room_picker_start_at').value,
								end_at: document.getElementById('room_picker_end_at').value,
								repeat: document.getElementById('update_room_picker_repeat').value
							}
		}

		function getFormUpdateData(){
			return {
								description: document.getElementById('update_room_picker_name').value,
								repeat_type: document.getElementById('update_room_picker_repeat_type').value,
								room_id: document.getElementById('update_room_picker_room_id').value,
								start_at: document.getElementById('update_room_picker_start_at').value,
								end_at: document.getElementById('update_room_picker_end_at').value,
								repeat: document.getElementById('update_room_picker_repeat').value
			}
		}

		function disableForm(value){
			document.querySelectorAll('.updatePickerInput').forEach(function(input){
				input.disabled = !value;
			});
		}

		function setFormUpdateData(event, time){
			document.getElementById('update_room_picker_name').value = event.description;
			document.getElementById('update_room_picker_repeat_type').value = event.repeat_type;
			document.getElementById('update_room_picker_room_id').value = event.room_id;
			document.getElementById('update_room_picker_start_at').value = datetimeLocal(time.start);
			document.getElementById('update_room_picker_end_at').value = datetimeLocal(time.end);
			document.getElementById('update_room_picker_repeat').checked = event.repeat;
		}

		const buttonShowModal = document.getElementById('buttonShowModal');
		const roomPickerStartAt = document.getElementById('room_picker_start_at');
		const roomPickerEndAt = document.getElementById('room_picker_end_at');
		const roomPickerName = document.getElementById('room_picker_name');

		const buttonShowUpdateModal = document.getElementById('buttonShowUpdateModal');
		const updatePickerStartAt = document.getElementById('update_room_picker_start_at');
		const updatePickerEndAt = document.getElementById('update_room_picker_end_at');
		const token = localStorage.getItem('token');

		var calendar = new FullCalendar.Calendar(document.getElementById('calendar'), {
			initialView: 'timeGridWeek',
			allDaySlot: false,
			slotMinTime: '06:00',
			slotMaxTime: '22:00',
			height: 910,
			selectable: true, 
			editable: true,
    	droppable: true,

			eventMaxStack: 2,
			eventSources: [
				{ 
					events: function(fetchInfo, successCallback, failureCallback) {
					$.ajax({
							url: '<%=ENV.fetch("BE_HOST") %>/api/v1/repeat_room_pickers',
							dataType: 'json',
							headers: {
								token: token
							},
							data: {
								where: {
									start_at_gteq: fetchInfo.startStr,
									end_at_lteq: fetchInfo.endStr
								}
							},
							success: function(doc) {
								successCallback(doc.data);
							}
					});
				}
				}
			],
			eventClick: function(info) {
				let deletePickerButton = removeListener("removePicker")
				let eventId = info.event._def.publicId

				console.log(info)
				setFormUpdateData(info.event._def.extendedProps, info.event);
				
				deletePickerButton.addEventListener("click", function(){
					$.ajax({
            url: `<%=ENV.fetch("BE_HOST") %>/api/v1/room_pickers/${eventId}`,
						method: "DELETE",
						headers: {
							token: token
						},
            dataType: 'json',
            data: {
							user_id: <%= current_user.id %>
            },
            success: function(data) {
							calendar.refetchEvents();
							toastr.success("<%= I18n.t('toatr.messages.room_picker.delete_success') %>", '', { closeButton: true, progressBar: true })
            },
						error: function (xhr, ajaxOptions, thrownError) {
							toastr.error("<%= I18n.t('toatr.messages.room_picker.delete_fail') %>", '', { closeButton: true, progressBar: true })
						}
        	});
				});

				let saveUpdatePicker = removeListener("sumitUpdateRoomPicker")
				saveUpdatePicker.addEventListener("click", function(){
					$.ajax({
            url: `<%=ENV.fetch("BE_HOST") %>/api/v1/room_pickers/${eventId}`,
						method: "PATCH",
						headers: {
							token: token
						},
            dataType: 'json',
            data: {
							room_picker: getFormUpdateData(),
							user_id: <%= current_user.id %>
            },
            success: function(data) {
							calendar.refetchEvents();
							toastr.success('Update Event Success', '', { closeButton: true, progressBar: true })
            },
						error: function (xhr, ajaxOptions, thrownError) {
							toastr.error(xhr.responseJSON.errors, '', { closeButton: true, progressBar: true })
						}
        	});
				});
				
				buttonShowUpdateModal.click();

				calendar.unselect();
			},
			eventMouseEnter: function(info){
				info.el.style.cursor = 'pointer';
				info.el.style.borderColor = 'white';
				info.el.style.borderWidth = '3px';
			},
			eventMouseLeave: function(info){
				info.el.style.cursor = '';
				info.el.style.borderColor = '';
				info.el.style.borderWidth = '0px';
			},
			select: function(info) {
				roomPickerStartAt.value = datetimeLocal(info.startStr);
				roomPickerEndAt.value = datetimeLocal(info.endStr);
				roomPickerName.value = '';

				buttonShowModal.click();

				let submitRoomPicker = removeListener("createRoomPicker");
				submitRoomPicker.addEventListener("click", function(){
					$.ajax({
            url: '<%=ENV.fetch("BE_HOST") %>/api/v1/room_pickers',
						method: "POST",
						headers: {
							token: token
						},
            dataType: 'json',
            data: {
							room_picker: getFormData(),
							user_id: <%= current_user.id %>
            },
            success: function(data) {
							calendar.refetchEvents();
							toastr.success('Create Event Success', '', { closeButton: true, progressBar: true })
            },
						error: function (xhr, ajaxOptions, thrownError) {
							toastr.error(xhr.responseJSON.errors, '', { closeButton: true, progressBar: true })
						}
        	});
				});

				calendar.unselect()
			},
			eventDrop: function(info) {
				let eventId = info.event._def.publicId;
				if (!confirm("Are you sure about this change?")) {
					info.revert();
				} else {
					$.ajax({
            url: `<%=ENV.fetch("BE_HOST") %>/api/v1/room_pickers/${eventId}`,
						method: "PATCH",
						headers: {
							token: token
						},
            dataType: 'json',
            data: {
							room_picker: {
								start_at: datetimeLocal(info.event.start),
								end_at: datetimeLocal(info.event.end) 
							},
							user_id: <%= current_user.id %>
            },
            success: function(data) {
							calendar.refetchEvents();
							toastr.success('Update Event Success', '', { closeButton: true, progressBar: true })
            },
						error: function (xhr, ajaxOptions, thrownError) {
							info.revert();
							toastr.error(xhr.responseJSON.errors, '', { closeButton: true, progressBar: true })
						}
        	});
				}
			}
		});

		calendar.render();
	});


</script>
